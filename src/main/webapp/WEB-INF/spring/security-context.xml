<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<oauth2:client id="oauth2AuthenticationClientFilter" />

	<oauth2:resource id="oauthResource"
		client-authentication-scheme="form"
		client-id="#{props['oauth.clientId']}"
		client-secret="#{props['oauth.clientSecret']}"
		pre-established-redirect-uri="#{props['oauth.redirectUrl']}"
		scope="#{props['oauth.scope']}"
		type="authorization_code"
		access-token-uri="https://accounts.google.com/o/oauth2/token"
		user-authorization-uri="https://accounts.google.com/o/oauth2/auth" />
		
	<oauth2:rest-template id="oauthRestTemplate" resource="oauthResource" />

	<http use-expressions="true">
		<intercept-url pattern="/albums" access="isAuthenticated()" />
		<intercept-url pattern="/**" access="permitAll" />
		<openid-login login-page="/" default-target-url="/albums">
           <attribute-exchange identifier-match="https://www.google.com/.*">
                <openid-attribute name="email" type="http://axschema.org/contact/email" required="true" count="1" />
                <openid-attribute name="firstname" type="http://axschema.org/namePerson/first" required="true" />
                <openid-attribute name="lastname" type="http://axschema.org/namePerson/last" required="true" />
           </attribute-exchange>
        </openid-login>
		<logout  />
		<remember-me />
		<custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="oauth2AuthenticationClientFilter" />
	</http>
	
    <authentication-manager >
        <authentication-provider user-service-ref="userDetailsService"/>
    </authentication-manager>
    
    <beans:bean id="userDetailsService" class="com.smartoncloud.picasaweb.security.CustomUserDetailsService" />
    
    <util:properties id="props" location="classpath:oauth.properties"/>
    
</beans:beans>